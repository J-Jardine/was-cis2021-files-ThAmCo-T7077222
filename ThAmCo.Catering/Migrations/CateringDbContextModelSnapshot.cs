// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThAmCo.Catering.Controllers;

namespace ThAmCo.Catering.Migrations
{
    [DbContext(typeof(CateringDbContext))]
    partial class CateringDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("thamco.catering")
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ThAmCo.Catering.Controllers.FoodBooking", b =>
                {
                    b.Property<int>("MenuId");

                    b.Property<int>("EventId");

                    b.HasKey("MenuId", "EventId");

                    b.ToTable("FoodBooking");

                    b.HasData(
                        new { MenuId = 1, EventId = 1 },
                        new { MenuId = 4, EventId = 2 },
                        new { MenuId = 7, EventId = 3 },
                        new { MenuId = 8, EventId = 4 },
                        new { MenuId = 10, EventId = 5 },
                        new { MenuId = 5, EventId = 6 }
                    );
                });

            modelBuilder.Entity("ThAmCo.Catering.Controllers.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost");

                    b.Property<string>("Desert");

                    b.Property<string>("Main");

                    b.Property<string>("Starter");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new { Id = 1, Cost = 10.0m, Desert = "Chocolate Pudding", Main = "Spaghetti Carbonara", Starter = "Tomato Soup" },
                        new { Id = 2, Cost = 20.3m, Desert = "Mixed Berry Mousse", Main = "Chicken Parmasan", Starter = "Cheese Balls" },
                        new { Id = 3, Cost = 10.7m, Desert = "Mango & Coconut Souffle", Main = "Double Cheese Burger", Starter = "Part Bake Bread & Butter" },
                        new { Id = 4, Cost = 7.5m, Desert = "Homemade Carrot Cake", Main = "Chicken Shawarma Skewers", Starter = "Cheese Balls" },
                        new { Id = 5, Cost = 14.4m, Desert = "Matcha Cake", Main = "Chicken Katsu", Starter = "Grilled Scallops" },
                        new { Id = 6, Cost = 15.3m, Desert = "Pancakes", Main = "Pepperoni Pizza", Starter = "Duck Pancakes" },
                        new { Id = 7, Cost = 9.7m, Desert = "Lemon Meringue Pie", Main = "Thai Green Curry", Starter = "Nachos" },
                        new { Id = 8, Cost = 11.2m, Desert = "Chocolate Pot x3", Main = "Sword Fish", Starter = "Salt & Pepper Squid" },
                        new { Id = 9, Cost = 15.1m, Desert = "Cheese Board", Main = "Salt & Pepper Chicken", Starter = "Hummus Board" },
                        new { Id = 10, Cost = 20.0m, Desert = "Tea & Coffee", Main = "Fillet Steak", Starter = "Garlic Bread" }
                    );
                });

            modelBuilder.Entity("ThAmCo.Catering.Controllers.FoodBooking", b =>
                {
                    b.HasOne("ThAmCo.Catering.Controllers.Menu", "Menu")
                        .WithMany("Booking")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
